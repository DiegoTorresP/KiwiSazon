<% if(typeof errores != 'undefined') { %>
        <div aria-live="polite" aria-atomic="true" class="position-relative">
            <div class="toast-container top-0 end-0 p-3" id="errorToast">
                <% errores.forEach( (errores)=> { %> 
                <div class="toast text-bg-danger bg-opacity-75 border border-danger" role="alert" aria-live="assertive" data-bs-autohide="false">
                    <div class="toast-header">
                        <img class="bd-placeholder-img rounded me-2" width="20" height="20" src="https://www.svgrepo.com/show/192555/warning-error.svg" aria-hidden="true" preserveAspectRatio="xMidYMid slice" focusable="false"></img>
                        <strong class="me-auto">¡Atención!</strong>                 
                        <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
                    </div>
                    <div class="toast-body text-white ">
                        <strong><%= errores.msg %></strong> 
                    </div>
                </div>
                <% }) %>
              </div>    
        </div>   
        <script>
          document.addEventListener('DOMContentLoaded', function() {
            var toasts = document.querySelectorAll('.toast');
        
            var toastContainer = new bootstrap.Toast(document.getElementById('errorToast'));
        
            // Mostrar los toasts al cargar la página
            toasts.forEach(function(toast) {
              var bsToast = new bootstrap.Toast(toast);
              bsToast.show();
            });
        
            // Cerrar los toasts al hacer clic en el botón de cerrar
            document.addEventListener('click', function(event) {
              if (event.target.classList.contains('btn-close')) {
                var toast = event.target.closest('.toast');
                var bsToast = bootstrap.Toast.getInstance(toast);
                bsToast.hide();
              }
            });
        
            // Ocultar los toasts después de un tiempo determinado
            setTimeout(function() {
              toastContainer.hide();
            }, 5000);
          });
        </script>            
  <% } %>

  